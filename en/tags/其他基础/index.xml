<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>其他基础 on Wjy&#39;s Blog</title>
    <link>https://funny-toffee-4aa7c3.netlify.app/en/tags/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/</link>
    <description>Recent content in 其他基础 on Wjy&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 10 Aug 2022 17:53:20 +0000</lastBuildDate><atom:link href="https://funny-toffee-4aa7c3.netlify.app/en/tags/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>加密与安全</title>
      <link>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/%E5%8A%A0%E5%AF%86%E4%B8%8E%E5%AE%89%E5%85%A8/</link>
      <pubDate>Wed, 10 Aug 2022 17:53:20 +0000</pubDate>
      
      <guid>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/%E5%8A%A0%E5%AF%86%E4%B8%8E%E5%AE%89%E5%85%A8/</guid>
      <description>&lt;h1 id=&#34;加密与安全&#34;&gt;加密与安全&lt;/h1&gt;
&lt;p&gt;在计算机系统中，什么是加密与安全呢？&lt;/p&gt;
&lt;p&gt;我们举个栗子：假设Bob要给Alice发一封邮件，在邮件传送的过程中，黑客可能会窃取到邮件的内容，所以需要防窃听。黑客还可能会篡改邮件的内容，Alice必须有能力识别出邮件有没有被篡改。最后，黑客可能假冒Bob给Alice发邮件，Alice必须有能力识别出伪造的邮件。&lt;/p&gt;
&lt;p&gt;所以，应对潜在的安全威胁，需要做到三防：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;防窃听&lt;/li&gt;
&lt;li&gt;防篡改&lt;/li&gt;
&lt;li&gt;防伪造&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;计算机加密技术就是为了实现上述目标，而现代计算机密码学理论是建立在严格的数学理论基础上的，密码学已经逐渐发展成一门科学。对于绝大多数开发者来说，设计一个安全的加密算法非常困难，验证一个加密算法是否安全更加困难，当前被认为安全的加密算法仅仅是迄今为止尚未被攻破。因此，要编写安全的计算机程序，我们要做到：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不要自己设计山寨的加密算法；&lt;/li&gt;
&lt;li&gt;不要自己实现已有的加密算法；&lt;/li&gt;
&lt;li&gt;不要自己修改已有的加密算法。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本章我们会介绍最常用的加密算法，以及如何通过Java代码实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>正则</title>
      <link>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/%E6%AD%A3%E5%88%99/</link>
      <pubDate>Tue, 09 Aug 2022 17:56:20 +0000</pubDate>
      
      <guid>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/%E6%AD%A3%E5%88%99/</guid>
      <description>&lt;p&gt;在了解正则表达式之前，我们先看几个非常常见的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何判断字符串是否是有效的电话号码？例如：&lt;code&gt;010-1234567&lt;/code&gt;，&lt;code&gt;123ABC456&lt;/code&gt;，&lt;code&gt;13510001000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如何判断字符串是否是有效的电子邮件地址？例如：&lt;code&gt;test@example.com&lt;/code&gt;，&lt;code&gt;test#example&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如何判断字符串是否是有效的时间？例如：&lt;code&gt;12:34&lt;/code&gt;，&lt;code&gt;09:60&lt;/code&gt;，&lt;code&gt;99:99&lt;/code&gt;等。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>爬虫</title>
      <link>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/%E7%88%AC%E8%99%AB/</link>
      <pubDate>Wed, 08 Dec 2021 10:48:12 +0000</pubDate>
      
      <guid>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/%E7%88%AC%E8%99%AB/</guid>
      <description>&lt;h1 id=&#34;概述&#34;&gt;概述&lt;/h1&gt;
&lt;p&gt;无论什么爬虫，爬数据的过程都分三步，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据采集&lt;/li&gt;
&lt;li&gt;数据解析&lt;/li&gt;
&lt;li&gt;数据保存&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>网络</title>
      <link>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Wed, 09 Dec 2020 00:48:47 +0000</pubDate>
      
      <guid>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C/</guid>
      <description>&lt;h1 id=&#34;网络通信原理&#34;&gt;网络通信原理&lt;/h1&gt;
&lt;h2 id=&#34;tcpip五层模型详解&#34;&gt;TCP/IP五层模型详解&lt;/h2&gt;
&lt;p&gt;计算机与计算机之间要有统一的连接标准才能够完成相互通信，这个标准被称为互联网协议，而网络就是物理链接介质+互联网协议。按照功能不同，人们将互联网协议从不同维度分为TCP/IP四层，TCP/IP五层和OSI七层，如下图所示。
&lt;img loading=&#34;lazy&#34; src=&#34;1.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>json</title>
      <link>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/json/</link>
      <pubDate>Fri, 07 Aug 2020 11:47:04 +0000</pubDate>
      
      <guid>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/json/</guid>
      <description>&lt;p&gt;Jackson 是用来序列化和反序列化 json 的 Java 的开源框架。Spring MVC 的默认 json 解析器便是 Jackson。 Jackson 的 1.x 版本的包名是 org.codehaus.jackson ，当升级到 2.x 版本时，包名变为 com.fasterxml.jackson，本文讨论的内容是基于最新的 Jackson 的 2.9.1 版本。
如果使用的是spring-boot项目，则spring-boot-starter-web默认会引入Jackson包，无需再次引入依赖。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mybatis-plus</title>
      <link>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/mybatis-plus/</link>
      <pubDate>Sat, 28 Mar 2020 15:07:56 +0000</pubDate>
      
      <guid>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/mybatis-plus/</guid>
      <description>&lt;p&gt;官网
&lt;a href=&#34;https://baomidou.com/&#34;&gt;https://baomidou.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其他参考
&lt;a href=&#34;https://www.cnblogs.com/l-y-h/p/12859477.html&#34;&gt;https://www.cnblogs.com/l-y-h/p/12859477.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Mybatis-Plus（简称MP）是一个 Mybatis 的增强工具，在 Mybatis 的基础上只做增强不做改变，为简化开发、提高效率而生。那么它是怎么增强的呢？其实就是它已经封装好了一些crud方法，我们不需要再写xml了，直接调用这些方法就行，就类似于JPA。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mybatis</title>
      <link>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/mybatis/</link>
      <pubDate>Fri, 27 Mar 2020 15:07:56 +0000</pubDate>
      
      <guid>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/mybatis/</guid>
      <description>&lt;h1 id=&#34;基础&#34;&gt;基础&lt;/h1&gt;
&lt;h2 id=&#34;面向接口编程&#34;&gt;面向接口编程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Mapper&lt;/code&gt;文件的&lt;code&gt;namespace&lt;/code&gt;要和&lt;code&gt;dao层接口&lt;/code&gt;的完整路径对应
&lt;code&gt;&amp;lt;mapper namespace=&amp;quot;com.wjy.mapper.TestMapper&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接口中的方法名字要和Mapper文件中SQL语句的ID对应
dao层接口
&lt;code&gt;xxxBean selectByPrimaryKey(Integer id);&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#727272&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;font-weight:bold&#34;&gt;&amp;lt;select&lt;/span&gt; &lt;span style=&#34;color:#007f7f&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;selectByPrimaryKey&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#007f7f&#34;&gt;resultMap=&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;BaseResultMap&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#007f7f&#34;&gt;parameterType=&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;java.lang.Integer&amp;#34;&lt;/span&gt; &lt;span style=&#34;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    select
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;font-weight:bold&#34;&gt;&amp;lt;include&lt;/span&gt; &lt;span style=&#34;color:#007f7f&#34;&gt;refid=&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;Base_Column_List&amp;#34;&lt;/span&gt; &lt;span style=&#34;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    from unit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    where id = #{id,jdbcType=INTEGER}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;font-weight:bold&#34;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>docker</title>
      <link>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/docker/</link>
      <pubDate>Thu, 05 Mar 2020 10:26:24 +0000</pubDate>
      
      <guid>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/docker/</guid>
      <description>&lt;h1 id=&#34;概述&#34;&gt;概述&lt;/h1&gt;
&lt;p&gt;Docker是一个开源项目，诞生于2013年初，最初是dotCloud公司内部的一个业余项目。它基于Google公司推出的Go语言实现。项目后来加入了Linux基金会，遵从了Apache2.0协议，项目代码在GitHub上进行维护。
Docker项目的目标是实现轻量级的操作系统虚拟化解决方案。Docker的基础是Linux容器(LXC)等技术。在LXC的基础上Docker进行了进一步封装，让用户不用去关心容器的管理，使得操作更为简便，用户操作docker容器就像操作一个轻量级虚拟机一样简单。
下面的图片比较了 Docker 和传统虚拟化方式的不同之处，可见docker是在操作系统上实现虚拟化，直接复用本地主机的操作系统，而传统方式则是在硬件层面实现。
&lt;img loading=&#34;lazy&#34; src=&#34;1.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>git</title>
      <link>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/git/</link>
      <pubDate>Mon, 25 Nov 2019 10:14:46 +0000</pubDate>
      
      <guid>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/git/</guid>
      <description>&lt;h1 id=&#34;常用命令&#34;&gt;常用命令&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;git%e5%91%bd%e4%bb%a4.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://git-scm.com/book/zh/v2&#34;&gt;git官方文档&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Maven</title>
      <link>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/maven/</link>
      <pubDate>Mon, 11 Nov 2019 11:41:35 +0000</pubDate>
      
      <guid>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/maven/</guid>
      <description>&lt;h1 id=&#34;maven介绍&#34;&gt;Maven介绍&lt;/h1&gt;
&lt;p&gt;在了解Maven之前，我们先来看看一个Java项目需要的东西。首先，我们需要确定引入哪些依赖包。例如，如果我们需要用到&lt;a href=&#34;https://commons.apache.org/proper/commons-logging/&#34;&gt;commons logging&lt;/a&gt;，我们就必须把commons logging的jar包放入classpath。如果我们还需要&lt;a href=&#34;https://logging.apache.org/log4j/&#34;&gt;log4j&lt;/a&gt;，就需要把log4j相关的jar包都放到classpath中。这些就是依赖包的管理。&lt;/p&gt;
&lt;p&gt;其次，我们要确定项目的目录结构。例如，&lt;code&gt;src&lt;/code&gt;目录存放Java源码，&lt;code&gt;resources&lt;/code&gt;目录存放配置文件，&lt;code&gt;bin&lt;/code&gt;目录存放编译生成的&lt;code&gt;.class&lt;/code&gt;文件。&lt;/p&gt;
&lt;p&gt;此外，我们还需要配置环境，例如JDK的版本，编译打包的流程，当前代码的版本号。&lt;/p&gt;
&lt;p&gt;最后，除了使用Eclipse这样的IDE进行编译外，我们还必须能通过命令行工具进行编译，才能够让项目在一个独立的服务器上编译、测试、部署。&lt;/p&gt;
&lt;p&gt;这些工作难度不大，但是非常琐碎且耗时。如果每一个项目都自己搞一套配置，肯定会一团糟。我们需要的是一个标准化的Java项目管理和构建工具。&lt;/p&gt;
&lt;p&gt;Maven就是是专门为Java项目打造的管理和构建工具，它的主要功能有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供了一套标准化的项目结构；&lt;/li&gt;
&lt;li&gt;提供了一套标准化的构建流程（编译，测试，打包，发布……）；&lt;/li&gt;
&lt;li&gt;提供了一套依赖管理机制。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>dubbo</title>
      <link>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/dubbo/</link>
      <pubDate>Wed, 17 Apr 2019 11:05:53 +0000</pubDate>
      
      <guid>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/dubbo/</guid>
      <description>&lt;h1 id=&#34;dubbo是什么&#34;&gt;dubbo是什么&lt;/h1&gt;
&lt;p&gt;是一个Jar包，一个分布式框架，一个远程服务调用的分布式框架。
为什么要分布式？为什么要远程调用？
&lt;img loading=&#34;lazy&#34; src=&#34;1.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jenkins</title>
      <link>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/jenkins/</link>
      <pubDate>Fri, 09 Nov 2018 16:54:53 +0000</pubDate>
      
      <guid>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/jenkins/</guid>
      <description>&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;p&gt;Jenkins是一个开源的自动部署服务器，提供了上百个插件用于自动构建、部署、发布任意项目。本文描述的是Jenkins本地部署以及远程部署等功能的实现。
&lt;a href=&#34;https://jenkins.io/zh/&#34;&gt;这是jenkins中文网&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nginx</title>
      <link>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/nginx/</link>
      <pubDate>Sat, 06 Oct 2018 18:06:29 +0000</pubDate>
      
      <guid>https://funny-toffee-4aa7c3.netlify.app/en/posts/%E5%85%B6%E4%BB%96%E5%9F%BA%E7%A1%80/nginx/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/knowledgesea/p/5175711.html&#34;&gt;nginx学习&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;
&lt;p&gt;1.下载：http://nginx.org/
2.解压至英文路径
3.进入解压后文件夹，双击nginx.exe启动nginx，默认为80端口，nginx启动时一闪而过，启动后打开浏览器，输入localhost，看到欢迎页面证明启动成功，若看不到欢迎页面，可能是80端口被占用
解决方法：进入nginx文件夹下的conf文件夹
编辑nginx.conf，找到server{listen   80;}修改端口号，重启nginx即可&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
